package $package;

import com.thomsonreuters.ta.taxbr.commons.xml.XPathParser;
import com.thomsonreuters.taxit.commons.util.TaxitObjectUtils;
import lombok.Getter;
import lombok.Setter;

import java.util.ArrayList;
import java.util.List;

@Setter
@Getter
public class $className {

    private static final String BASE_URL = "$classDef.pathWithStringFormat()";

    #foreach( $field in $fields )
    #if ($field.isCollection)
private List<$classPrefix$field.elementFormattedToTypeName> ${field.elementFormatted}List = new ArrayList<>();
    #elseif ($field.isObject)
private $classPrefix$field.elementFormattedToTypeName $field.elementFormatted;
    #else
private String $field.elementFormatted;
    #end

    #end
    #if ($classDef.isCollection)
    public $className(String xml#foreach ($position in $classDef.pathPositions), int $position#if( $foreach.hasNext ),#end#end) {
        String size;
        #if( $classDef.pathPositions.size() > 0 )
            String url = String.format(${classPrefix}${classDef.elementFormattedToTypeName}.BASE_URL#foreach ($position in $classDef.pathPositions), $position#if( $foreach.hasNext ),#end#end);
        #else
            String url = ${classPrefix}${classDef.elementFormattedToTypeName}.BASE_URL;
        #end
        #foreach( $field in $fields )
            #if( $field.isCollection )
        size = XPathParser.getValueFromXmlString(xml, "count(" + url + "/$field.element)");
        if (!TaxitObjectUtils.isEmpty(size) && Integer.parseInt(size) > 0) {
            for (int i = 0; i < Integer.parseInt(size); i++) {
                this.${field.elementFormatted}List.add(new ${classPrefix}${field.elementFormattedToTypeName}(xml#foreach ($position in $classDef.pathPositions), $position #if( $foreach.hasNext ),#end#end, i + 1));
            }
        }
            #elseif ($field.isObject)
        this.${field.elementFormatted} = new ${classPrefix}${field.elementFormattedToTypeName}(xml#foreach ($position in $classDef.pathPositions), $position #if( $foreach.hasNext ),#end#end);
            #else
        this.${field.elementFormatted} = XPathParser.getValueFromXmlString(xml, url + "/${field.element}");
            #end
            #end
    }
    #else
    public $className(String xml#foreach ($position in $classDef.pathPositions), int $position#if( $foreach.hasNext ),#end#end) {
        String size;
        #if( $classDef.pathPositions.size() > 0 )
            String url = String.format(${classPrefix}${classDef.elementFormattedToTypeName}.BASE_URL#foreach ($position in $classDef.pathPositions), $position#if( $foreach.hasNext ),#end#end);
        #else
            String url = ${classPrefix}${classDef.elementFormattedToTypeName}.BASE_URL;
        #end
        #foreach( $field in $fields )
            #if ($field.isCollection)
                size = XPathParser.getValueFromXmlString(xml, "count(" + url + "/$field.element)");
                if (!TaxitObjectUtils.isEmpty(size) && Integer.parseInt(size) > 0) {
                    for (int i = 0; i < Integer.parseInt(size); i++) {
                        this.${field.elementFormatted}List.add(new ${classPrefix}${field.elementFormattedToTypeName}(xml#foreach ($position in $classDef.pathPositions), $position #if( $foreach.hasNext ), #end#end, i + 1));
                    }
                }
            #elseif ($field.isObject)
                this.${field.elementFormatted} = new ${classPrefix}${field.elementFormattedToTypeName}(xml#foreach ($position in $classDef.pathPositions), $position#if( $foreach.hasNext ),#end#end);
            #else
        this.${field.elementFormatted} = XPathParser.getValueFromXmlString(xml, url + "/${field.element}");
            #end
            #end
    }
    #end
}